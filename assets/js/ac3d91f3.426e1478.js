"use strict";(self.webpackChunkdata_structures=self.webpackChunkdata_structures||[]).push([[5617],{1470:(e,n,a)=>{a.d(n,{A:()=>N});var s=a(6540),r=a(4164),i=a(3104),t=a(6347),l=a(205),o=a(7485),c=a(1682),d=a(679);function m(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:a}=e;return(0,s.useMemo)(()=>{const e=n??function(e){return m(e).map(({props:{value:e,label:n,attributes:a,default:s}})=>({value:e,label:n,attributes:a,default:s}))}(a);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,a])}function u({value:e,tabValues:n}){return n.some(n=>n.value===e)}function x({queryString:e=!1,groupId:n}){const a=(0,t.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(r),(0,s.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})},[r,a])]}function p(e){const{defaultValue:n,queryString:a=!1,groupId:r}=e,i=h(e),[t,o]=(0,s.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!u({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=n.find(e=>e.default)??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:i})),[c,m]=x({queryString:a,groupId:r}),[p,g]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[a,r]=(0,d.Dv)(n);return[a,(0,s.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),j=(()=>{const e=c??p;return u({value:e,tabValues:i})?e:null})();(0,l.A)(()=>{j&&o(j)},[j]);return{selectedValue:t,selectValue:(0,s.useCallback)(e=>{if(!u({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),m(e),g(e)},[m,g,i]),tabValues:i}}var g=a(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=a(4848);function f({className:e,block:n,selectedValue:a,selectValue:s,tabValues:t}){const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,i.a_)(),c=e=>{const n=e.currentTarget,r=l.indexOf(n),i=t[r].value;i!==a&&(o(n),s(i))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=l.indexOf(e.currentTarget)+1;n=l[a]??l[0];break}case"ArrowLeft":{const a=l.indexOf(e.currentTarget)-1;n=l[a]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:t.map(({value:e,label:n,attributes:s})=>(0,b.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{l.push(e)},onKeyDown:d,onClick:c,...s,className:(0,r.A)("tabs__item",j.tabItem,s?.className,{"tabs__item--active":a===e}),children:n??e},e))})}function y({lazy:e,children:n,selectedValue:a}){const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===a);return e?(0,s.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==a}))})}function v(e){const n=p(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",j.tabList),children:[(0,b.jsx)(f,{...n,...e}),(0,b.jsx)(y,{...n,...e})]})}function N(e){const n=(0,g.A)();return(0,b.jsx)(v,{...e,children:m(e.children)},String(n))}},1739:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"sorting_algorithms/radix_sort","title":"Radix Sort","description":"Radix Sort es un algoritmo de ordenamiento no basado en comparaci\xf3n que ordena enteros procesando d\xedgito por d\xedgito (de menor a mayor posici\xf3n, o viceversa), normalmente usando Counting Sort como subrutina estable.","source":"@site/docs/05_sorting_algorithms/09_radix_sort.md","sourceDirName":"05_sorting_algorithms","slug":"/sorting_algorithms/radix_sort","permalink":"/Data_Structures/docs/sorting_algorithms/radix_sort","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/05_sorting_algorithms/09_radix_sort.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar-position":9},"sidebar":"tutorialSidebar","previous":{"title":"Counting Sort","permalink":"/Data_Structures/docs/sorting_algorithms/counting_sort"},"next":{"title":"Bucket Sort","permalink":"/Data_Structures/docs/sorting_algorithms/bucket_sort"}}');var r=a(4848),i=a(8453),t=a(1470),l=a(9365);const o={"sidebar-position":9},c="Radix Sort",d={},m=[{value:"Complejidades",id:"complejidades",level:2},{value:"Caracter\xedsticas",id:"caracter\xedsticas",level:2},{value:"Diagrama de secuencia",id:"diagrama-de-secuencia",level:2},{value:"Ejemplo t\xe9cnico",id:"ejemplo-t\xe9cnico",level:2},{value:"Aplicaciones Reales",id:"aplicaciones-reales",level:2},{value:"Referencias",id:"referencias",level:2}];function h(e){const n={annotation:"annotation",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mermaid:"mermaid",mi:"mi",mo:"mo",mrow:"mrow",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"radix-sort",children:"Radix Sort"})}),"\n",(0,r.jsxs)(n.p,{children:["Radix Sort es un algoritmo de ordenamiento ",(0,r.jsx)(n.strong,{children:"no basado en comparaci\xf3n"})," que ordena enteros procesando ",(0,r.jsx)(n.strong,{children:"d\xedgito por d\xedgito"})," (de menor a mayor posici\xf3n, o viceversa), normalmente usando ",(0,r.jsx)(n.strong,{children:"Counting Sort"})," como subrutina estable."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Principio Rector:"})," ",(0,r.jsx)(n.em,{children:"Ordena los n\xfameros por posici\xf3n de d\xedgito, comenzando desde la posici\xf3n menos significativa (LSD \u2013 Least Significant Digit) o desde la m\xe1s significativa (MSD \u2013 Most Significant Digit)."})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"complejidades",children:"Complejidades"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["En el mejor caso, la complejidad temporal es de ",(0,r.jsxs)(n.span,{className:"katex",children:[(0,r.jsx)(n.span,{className:"katex-mathml",children:(0,r.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(n.semantics,{children:[(0,r.jsxs)(n.mrow,{children:[(0,r.jsx)(n.mi,{children:"O"}),(0,r.jsx)(n.mo,{stretchy:"false",children:"("}),(0,r.jsx)(n.mi,{children:"n"}),(0,r.jsx)(n.mi,{children:"k"}),(0,r.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(n k)"})]})})}),(0,r.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(n.span,{className:"mopen",children:"("}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"nk"}),(0,r.jsx)(n.span,{className:"mclose",children:")"})]})})]}),", y la complejidad espacial es de ",(0,r.jsxs)(n.span,{className:"katex",children:[(0,r.jsx)(n.span,{className:"katex-mathml",children:(0,r.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(n.semantics,{children:[(0,r.jsxs)(n.mrow,{children:[(0,r.jsx)(n.mi,{children:"O"}),(0,r.jsx)(n.mo,{stretchy:"false",children:"("}),(0,r.jsx)(n.mi,{children:"n"}),(0,r.jsx)(n.mo,{children:"+"}),(0,r.jsx)(n.mi,{children:"k"}),(0,r.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(n + k)"})]})})}),(0,r.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(n.span,{className:"mopen",children:"("}),(0,r.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,r.jsx)(n.span,{className:"mbin",children:"+"}),(0,r.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,r.jsx)(n.span,{className:"mclose",children:")"})]})]})]})]}),"\n",(0,r.jsxs)(n.li,{children:["En el caso promedio, la complejidad temporal es de ",(0,r.jsxs)(n.span,{className:"katex",children:[(0,r.jsx)(n.span,{className:"katex-mathml",children:(0,r.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(n.semantics,{children:[(0,r.jsxs)(n.mrow,{children:[(0,r.jsx)(n.mi,{children:"O"}),(0,r.jsx)(n.mo,{stretchy:"false",children:"("}),(0,r.jsx)(n.mi,{children:"n"}),(0,r.jsx)(n.mi,{children:"k"}),(0,r.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(n k)"})]})})}),(0,r.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(n.span,{className:"mopen",children:"("}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"nk"}),(0,r.jsx)(n.span,{className:"mclose",children:")"})]})})]}),", y la complejidad espacial es de ",(0,r.jsxs)(n.span,{className:"katex",children:[(0,r.jsx)(n.span,{className:"katex-mathml",children:(0,r.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(n.semantics,{children:[(0,r.jsxs)(n.mrow,{children:[(0,r.jsx)(n.mi,{children:"O"}),(0,r.jsx)(n.mo,{stretchy:"false",children:"("}),(0,r.jsx)(n.mi,{children:"n"}),(0,r.jsx)(n.mo,{children:"+"}),(0,r.jsx)(n.mi,{children:"k"}),(0,r.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(n + k)"})]})})}),(0,r.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(n.span,{className:"mopen",children:"("}),(0,r.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,r.jsx)(n.span,{className:"mbin",children:"+"}),(0,r.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,r.jsx)(n.span,{className:"mclose",children:")"})]})]})]})]}),"\n",(0,r.jsxs)(n.li,{children:["En el peor caso, la complejidad temporal es de ",(0,r.jsxs)(n.span,{className:"katex",children:[(0,r.jsx)(n.span,{className:"katex-mathml",children:(0,r.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(n.semantics,{children:[(0,r.jsxs)(n.mrow,{children:[(0,r.jsx)(n.mi,{children:"O"}),(0,r.jsx)(n.mo,{stretchy:"false",children:"("}),(0,r.jsx)(n.mi,{children:"n"}),(0,r.jsx)(n.mi,{children:"k"}),(0,r.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(n k)"})]})})}),(0,r.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(n.span,{className:"mopen",children:"("}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"nk"}),(0,r.jsx)(n.span,{className:"mclose",children:")"})]})})]}),", y la complejidad espacial es de ",(0,r.jsxs)(n.span,{className:"katex",children:[(0,r.jsx)(n.span,{className:"katex-mathml",children:(0,r.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(n.semantics,{children:[(0,r.jsxs)(n.mrow,{children:[(0,r.jsx)(n.mi,{children:"O"}),(0,r.jsx)(n.mo,{stretchy:"false",children:"("}),(0,r.jsx)(n.mi,{children:"n"}),(0,r.jsx)(n.mo,{children:"+"}),(0,r.jsx)(n.mi,{children:"k"}),(0,r.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(n + k)"})]})})}),(0,r.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(n.span,{className:"mopen",children:"("}),(0,r.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,r.jsx)(n.span,{className:"mbin",children:"+"}),(0,r.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,r.jsx)(n.span,{className:"mclose",children:")"})]})]})]})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Donde:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"n"}),": es el n\xfamero de elementos"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"k"}),": es el n\xfamero de d\xedgitos del n\xfamero m\xe1s grande, suele ser constante, y tiene un rendimiento cercano a ",(0,r.jsxs)(n.span,{className:"katex",children:[(0,r.jsx)(n.span,{className:"katex-mathml",children:(0,r.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(n.semantics,{children:[(0,r.jsxs)(n.mrow,{children:[(0,r.jsx)(n.mi,{children:"O"}),(0,r.jsx)(n.mo,{stretchy:"false",children:"("}),(0,r.jsx)(n.mi,{children:"n"}),(0,r.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,r.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(n.span,{className:"mopen",children:"("}),(0,r.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(n.span,{className:"mclose",children:")"})]})})]})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"caracter\xedsticas",children:"Caracter\xedsticas"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Es estable, pero, solo si el sort interno lo es."}),"\n",(0,r.jsx)(n.li,{children:"No es in-place"}),"\n",(0,r.jsx)(n.li,{children:"Solo sirve para valores discretos (enteros, fechas, string fijos)"}),"\n",(0,r.jsx)(n.li,{children:"Ideal cuando los datos tienen longitud limitada de representaci\xf3n."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"diagrama-de-secuencia",children:"Diagrama de secuencia"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    autonumber\n    participant User\n    participant RadixSort\n    participant DigitLoop as Loop (exp = 1 y exp *= 10)\n    participant CountSortDigit\n    participant CountArray as count[]\n    participant OutputArray as output[]\n\n    User->>RadixSort: radixSort(arr)\n    activate RadixSort\n\n    RadixSort->>RadixSort: Encontrar el valor m\xe1ximo (max)\n\n    loop por cada d\xedgito (exp = 1 y exp *= 10)\n        RadixSort->>DigitLoop: Iterar por posici\xf3n de d\xedgito\n        activate DigitLoop\n\n        DigitLoop->>CountSortDigit: countingSortByDigit(arr, exp)\n        activate CountSortDigit\n\n        CountSortDigit->>CountArray: Inicializar con ceros\n        CountSortDigit->>CountArray: Contar ocurrencias de d\xedgitos\n        CountSortDigit->>CountArray: Calcular acumulado\n\n        CountSortDigit->>OutputArray: Llenar arreglo ordenado seg\xfan d\xedgito\n        CountSortDigit->>arr: Copiar valores ordenados al arreglo original\n        deactivate CountSortDigit\n\n        DigitLoop->>RadixSort: Retornar arreglo modificado\n        deactivate DigitLoop\n    end\n\n    RadixSort--\x3e>User: Retornar arreglo ordenado final\n    deactivate RadixSort"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"El usuario pide ordenar los datos usando Radix Sort."}),"\n",(0,r.jsx)(n.li,{children:"El algoritmo busca cual es el valor m\xe1ximo dentro del arreglo, para saber cu\xe1ntas posiciones decimales se deben procesar (unidades, decenas, centenas, etc.)."}),"\n",(0,r.jsx)(n.li,{children:"Se inicia un ciclo que recorre cada posici\xf3n decimal (exp=1, 10, 100, etc.). El ciclo se repite hasta que el resultado de la divisi\xf3n entre el n\xfamero m\xe1ximo sobre el valor de posici\xf3n decimal sea mayor que 0. Luego se itera por cada posici\xf3n decimal."}),"\n",(0,r.jsxs)(n.li,{children:["Se ordena el arreglo seg\xfan el d\xedgito actual (exp), usando la funci\xf3n ",(0,r.jsx)(n.code,{children:"countingSortByDigit"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Dentro del m\xe9todo de ordenamiento por d\xedgito, se inicializa un arreglo contador en ceros."}),"\n",(0,r.jsx)(n.li,{children:"Se cuenta cuantas veces aparece cada d\xedgito en la posici\xf3n actual."}),"\n",(0,r.jsx)(n.li,{children:"Se acumulan los conteos para determinas las posiciones finales en el arreglo ordenado."}),"\n",(0,r.jsx)(n.li,{children:"Se llena un arreglo de salida con los elementos ordenados seg\xfan el d\xedgito actual."}),"\n",(0,r.jsx)(n.li,{children:"Se copia los valores del output de vuelta en el arreglo original para continuar con la siguiente iteraci\xf3n."}),"\n",(0,r.jsx)(n.li,{children:"Se desactiva el proceso de ordenamiento por d\xedgito."}),"\n",(0,r.jsx)(n.li,{children:"Se retorna el arreglo parcialmente ordenado a Radix Sort para continuar con el siguiente d\xedgito."}),"\n",(0,r.jsx)(n.li,{children:"Se devuelve el arreglo ordenado al usuario."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"ejemplo-t\xe9cnico",children:"Ejemplo t\xe9cnico"}),"\n","\n",(0,r.jsxs)(t.A,{children:[(0,r.jsx)(l.A,{value:"java",label:"Paradigma: Orientado a Objetos",children:(0,r.jsxs)(t.A,{children:[(0,r.jsx)(l.A,{value:"code",label:"C\xf3digo Java Ejemplo",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:"showLineNumbers",children:"import java.util.Arrays;\n\npublic class RadixSort {\n\n    public static void sort(int[] array) {\n        int maxValue = Arrays.stream(array).max().getAsInt();\n\n        for (int digitPlace = 1; maxValue / digitPlace > 0; digitPlace *= 10) {\n            sortByDigit(array, digitPlace);\n        }\n    }\n\n    private static void sortByDigit(int[] array, int digitPlace) {\n        int[] sortedArray = new int[array.length];\n        int[] digitCount = new int[10]; \n\n        for (int number : array) {\n            int digit = (number / digitPlace) % 10;\n            digitCount[digit]++;\n        }\n\n        for (int i = 1; i < 10; i++) {\n            digitCount[i] += digitCount[i - 1];\n        }\n\n        for (int i = array.length - 1; i >= 0; i--) {\n            int digit = (array[i] / digitPlace) % 10;\n            int position = digitCount[digit] - 1;\n            sortedArray[position] = array[i];\n            digitCount[digit]--;\n        }\n\n        System.arraycopy(sortedArray, 0, array, 0, array.length);\n    }\n}\n"})})}),(0,r.jsx)(l.A,{value:"test",label:"Test Unitario",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:"showLineNumbers",children:"@Test\nvoid testRadixSort() {\n    int[] arr = {170, 45, 75, 90, 802, 24, 2, 66};\n    RadixSort.sort(arr);\n    assertArrayEquals(new int[]{2, 24, 45, 66, 75, 90, 170, 802}, arr);\n}\n"})})})]})}),(0,r.jsx)(l.A,{value:"python",label:"Paradigma: Procedural",children:(0,r.jsxs)(t.A,{children:[(0,r.jsx)(l.A,{value:"code",label:"C\xf3digo Python Ejemplo",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",metastring:"showLineNumbers",children:"def counting_sort_by_digit(arr, exp):\n    n = len(arr)\n    output = [0] * n\n    count = [0] * 10\n\n    for num in arr:\n        index = (num // exp) % 10\n        count[index] += 1\n\n    for i in range(1, 10):\n        count[i] += count[i - 1]\n\n    for i in range(n - 1, -1, -1):\n        index = (arr[i] // exp) % 10\n        output[count[index] - 1] = arr[i]\n        count[index] -= 1\n\n    for i in range(n):\n        arr[i] = output[i]\n\ndef radix_sort(arr):\n    if not arr:\n        return arr\n    max_num = max(arr)\n    exp = 1\n    while max_num // exp > 0:\n        counting_sort_by_digit(arr, exp)\n        exp *= 10\n"})})}),(0,r.jsx)(l.A,{value:"test",label:"Test Unitario",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",metastring:"showLineNumbers",children:"def test_radix_sort():\n    arr = [170, 45, 75, 90, 802, 24, 2, 66]\n    radix_sort(arr)\n    assert arr == [2, 24, 45, 66, 75, 90, 170, 802]\n"})})})]})}),(0,r.jsx)(l.A,{value:"functional",label:"Paradigma: Funcional",children:(0,r.jsxs)(t.A,{children:[(0,r.jsx)(l.A,{value:"code",label:"C\xf3digo TypeScript ejemplo",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"export const radixSort = (arr: number[]): number[] => {\n  if (arr.length === 0) return [];\n\n  const max = Math.max(...arr);\n  let exp = 1;\n  let result = [...arr];\n\n  while (Math.floor(max / exp) > 0) {\n    result = countingSortByDigit(result, exp);\n    exp *= 10;\n  }\n\n  return result;\n};\n\nconst countingSortByDigit = (arr: number[], exp: number): number[] => {\n  const output = Array(arr.length).fill(0);\n  const count = Array(10).fill(0);\n\n  arr.forEach(num => {\n    const digit = Math.floor(num / exp) % 10;\n    count[digit]++;\n  });\n\n  for (let i = 1; i < 10; i++)\n    count[i] += count[i - 1];\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const digit = Math.floor(arr[i] / exp) % 10;\n    output[--count[digit]] = arr[i];\n  }\n\n  return output;\n};\n"})})}),(0,r.jsx)(l.A,{value:"test",label:"Test Unitario",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'import { radixSort } from "./radixSort";\n\ntest("radix sort works", () => {\n  expect(radixSort([170, 45, 75, 90, 802, 24, 2, 66])).toEqual([2, 24, 45, 66, 75, 90, 170, 802]);\n});\n'})})})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"aplicaciones-reales",children:"Aplicaciones Reales"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Procesamiento de grandes vol\xfamenes de datos enteros en bancos y censos."}),"\n",(0,r.jsx)(n.li,{children:"Ordenamiento de c\xf3digos postales, identificadores o fechas."}),"\n",(0,r.jsx)(n.li,{children:"Datos tabulares que requieren alta velocidad y estabilidad."}),"\n",(0,r.jsx)(n.li,{children:"Aplicaciones en FPGA (matriz de puertas programables en campo), ASIC (circuito integrado para aplicaciones espec\xedficas), donde se requiere rendimiento determinista sin comparaciones."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"referencias",children:"Referencias"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Cormen, T. H., Leiserson, C. E., Rivest, R. L., & Stein, C. (2022). Introduction to Algorithms (4th ed.). MIT Press."}),"\n",(0,r.jsx)(n.li,{children:"Knuth, D. E. (1998). The Art of Computer Programming, Vol. 3: Sorting and Searching. Addison-Wesley."}),"\n",(0,r.jsx)(n.li,{children:"Sedgewick, R., & Wayne, K. (2011). Algorithms (4th ed.). Addison-Wesley."}),"\n",(0,r.jsx)(n.li,{children:"Weiss, M. A. (2020). Data Structures and Algorithm Analysis in Java (4th ed.). Pearson."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>l});var s=a(6540);const r={},i=s.createContext(r);function t(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(i.Provider,{value:n},e.children)}},9365:(e,n,a)=>{a.d(n,{A:()=>t});a(6540);var s=a(4164);const r={tabItem:"tabItem_Ymn6"};var i=a(4848);function t({children:e,hidden:n,className:a}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,a),hidden:n,children:e})}}}]);