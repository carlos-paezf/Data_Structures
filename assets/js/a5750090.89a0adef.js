"use strict";(self.webpackChunkdata_structures=self.webpackChunkdata_structures||[]).push([[9782],{8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var i=s(6540);const a={},l=i.createContext(a);function r(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(l.Provider,{value:n},e.children)}},9741:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"linear_structures_and_use_of_nodes/exercises","title":"Ejercicios propuestos por tema","description":"Nodos y Punteros","source":"@site/docs/04_linear_structures_and_use_of_nodes/08_exercises.md","sourceDirName":"04_linear_structures_and_use_of_nodes","slug":"/linear_structures_and_use_of_nodes/exercises","permalink":"/Data_Structures/docs/linear_structures_and_use_of_nodes/exercises","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/04_linear_structures_and_use_of_nodes/08_exercises.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar-position":8},"sidebar":"tutorialSidebar","previous":{"title":"Queue (Colas): FIFO, variantes (colas dobles, de prioridad)","permalink":"/Data_Structures/docs/linear_structures_and_use_of_nodes/queue"}}');var a=s(4848),l=s(8453);const r={"sidebar-position":8},d="Ejercicios propuestos por tema",o={},c=[{value:"Nodos y Punteros",id:"nodos-y-punteros",level:2},{value:"Reto 1: Crear una estructura b\xe1sica de nodo",id:"reto-1-crear-una-estructura-b\xe1sica-de-nodo",level:3},{value:"Lista Enlazada Simple",id:"lista-enlazada-simple",level:2},{value:"Reto 1: Construcci\xf3n b\xe1sica de una lista enlazada simple",id:"reto-1-construcci\xf3n-b\xe1sica-de-una-lista-enlazada-simple",level:3},{value:"Reto 2: Insertar al inicio y eliminar el primero",id:"reto-2-insertar-al-inicio-y-eliminar-el-primero",level:3},{value:"Reto 3: Buscar un elemento",id:"reto-3-buscar-un-elemento",level:3},{value:"Reto 4: Insertar en una posici\xf3n espec\xedfica",id:"reto-4-insertar-en-una-posici\xf3n-espec\xedfica",level:3},{value:"Reto 5: Eliminar por valor",id:"reto-5-eliminar-por-valor",level:3},{value:"Lista Enlazada Doble",id:"lista-enlazada-doble",level:2},{value:"Reto 1: Construcci\xf3n b\xe1sica de una lista doblemente enlazada",id:"reto-1-construcci\xf3n-b\xe1sica-de-una-lista-doblemente-enlazada",level:3},{value:"Reto 2: Recorrer en ambos sentidos",id:"reto-2-recorrer-en-ambos-sentidos",level:3},{value:"Reto 3: Insertar al inicio y al final",id:"reto-3-insertar-al-inicio-y-al-final",level:3},{value:"Listas Enlazada Circular Simple",id:"listas-enlazada-circular-simple",level:2},{value:"Reto 1: Resolver el problema de Josephus",id:"reto-1-resolver-el-problema-de-josephus",level:3},{value:"Lista Enlazada Circular Doble",id:"lista-enlazada-circular-doble",level:2},{value:"Reto 1: Simular un sistema de turnos",id:"reto-1-simular-un-sistema-de-turnos",level:3},{value:"Stack (Pilas): LIFO, implementaci\xf3n con arrays y listas enlazadas",id:"stack-pilas-lifo-implementaci\xf3n-con-arrays-y-listas-enlazadas",level:2},{value:"Reto 1: Validar par\xe9ntesis balanceados",id:"reto-1-validar-par\xe9ntesis-balanceados",level:3},{value:"Reto 2: Deshacer y rehacer (Undo/Redo)",id:"reto-2-deshacer-y-rehacer-undoredo",level:3},{value:"Reto 3: Evaluar expresiones en notaci\xf3n postfija (RPN)",id:"reto-3-evaluar-expresiones-en-notaci\xf3n-postfija-rpn",level:3},{value:"Queue (Colas): FIFO, variantes (colas dobles, de prioridad)",id:"queue-colas-fifo-variantes-colas-dobles-de-prioridad",level:2},{value:"Reto 1: Simular una fila de atenci\xf3n al cliente",id:"reto-1-simular-una-fila-de-atenci\xf3n-al-cliente",level:3},{value:"Reto 2: Cola de prioridad b\xe1sica",id:"reto-2-cola-de-prioridad-b\xe1sica",level:3},{value:"Reto 3: Cola doble (Deque)",id:"reto-3-cola-doble-deque",level:3}];function t(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"ejercicios-propuestos-por-tema",children:"Ejercicios propuestos por tema"})}),"\n",(0,a.jsx)(n.h2,{id:"nodos-y-punteros",children:"Nodos y Punteros"}),"\n",(0,a.jsx)(n.h3,{id:"reto-1-crear-una-estructura-b\xe1sica-de-nodo",children:"Reto 1: Crear una estructura b\xe1sica de nodo"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," B\xe1sico"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 25 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," Individual"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Implementa una clase ",(0,a.jsx)(n.code,{children:"Node"})," que contenga un valor entero y una referencia (",(0,a.jsx)(n.code,{children:"next"}),") al siguiente nodo. Luego, crea manualmente una cadena de 3 nodos y recorre la lista mostrando los valores."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Valores en la lista: 10 -> 20 -> 30\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Define la clase ",(0,a.jsx)(n.code,{children:"Node"})," con atributos ",(0,a.jsx)(n.code,{children:"data"})," y ",(0,a.jsx)(n.code,{children:"next"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Usa referencias (",(0,a.jsx)(n.code,{children:"next"}),") para conectar los nodos."]}),"\n",(0,a.jsx)(n.li,{children:"Un while es ideal para recorrer la lista."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"lista-enlazada-simple",children:"Lista Enlazada Simple"}),"\n",(0,a.jsx)(n.h3,{id:"reto-1-construcci\xf3n-b\xe1sica-de-una-lista-enlazada-simple",children:"Reto 1: Construcci\xf3n b\xe1sica de una lista enlazada simple"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," B\xe1sico"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 25 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," Individual"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Crea una clase ",(0,a.jsx)(n.code,{children:"Node"})," con atributos ",(0,a.jsx)(n.code,{children:"data"})," (entero) y ",(0,a.jsx)(n.code,{children:"next"}),". Luego, crea una clase ",(0,a.jsx)(n.code,{children:"SimpleLinkedList"})," que tenga un atributo ",(0,a.jsx)(n.code,{children:"head"})," (cabeza de la lista). Implementa un m\xe9todo ",(0,a.jsx)(n.code,{children:"addAtEnd(int data)"})," que inserte un nodo al final de la lista y un m\xe9todo ",(0,a.jsx)(n.code,{children:"printList()"})," que muestre todos los elementos."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Lista: 5 -> 10 -> 15 -> null\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Si ",(0,a.jsx)(n.code,{children:"head"})," es ",(0,a.jsx)(n.code,{children:"null"}),", el nuevo nodo ser\xe1 la cabeza."]}),"\n",(0,a.jsx)(n.li,{children:"Usa un puntero temporal para recorrer hasta el \xfaltimo nodo."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"reto-2-insertar-al-inicio-y-eliminar-el-primero",children:"Reto 2: Insertar al inicio y eliminar el primero"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," B\xe1sico"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 30 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," En parejas"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Usando la clase del reto anterior, implementa dos m\xe9todos adicionales:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"addAtBeginning(int data)"})," que inserte un nodo al inicio."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"deleteFirst()"})," que elimine el primer nodo de la lista."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Insertando al inicio: 20 -> 5 -> 10 -> 15 -> null  \nEliminando el primero: 5 -> 10 -> 15 -> null\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Al insertar al inicio, el nuevo nodo apunta al ",(0,a.jsx)(n.code,{children:"head"})," y luego se actualiza ",(0,a.jsx)(n.code,{children:"head"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Para eliminar el primero, actualiza ",(0,a.jsx)(n.code,{children:"head = head.next"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"reto-3-buscar-un-elemento",children:"Reto 3: Buscar un elemento"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," Medio"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 35 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," Individual"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Agrega un m\xe9todo ",(0,a.jsx)(n.code,{children:"search(int value)"})," que recorra la lista y devuelva ",(0,a.jsx)(n.code,{children:"true"})," si el valor existe, o ",(0,a.jsx)(n.code,{children:"false"})," si no est\xe1 presente."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Lista: 3 -> 6 -> 9 -> null  \nBuscar 6: Encontrado  \nBuscar 10: No encontrado\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Usa un puntero temporal para recorrer nodo por nodo."}),"\n",(0,a.jsxs)(n.li,{children:["Si el valor es encontrado, retorna ",(0,a.jsx)(n.code,{children:"true"})," inmediatamente."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"reto-4-insertar-en-una-posici\xf3n-espec\xedfica",children:"Reto 4: Insertar en una posici\xf3n espec\xedfica"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," Medio"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 50 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," En grupo (m\xe1x. 3 personas)"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Implementa el m\xe9todo ",(0,a.jsx)(n.code,{children:"insertAtPosition(int data, int position)"})," que inserte un nodo en la posici\xf3n indicada (0 es el inicio). Si la posici\xf3n no existe, debe mostrar un mensaje de error."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Lista inicial: 1 -> 2 -> 4 -> null  \nInsertar en posici\xf3n 2 (dato 3): 1 -> 2 -> 3 -> 4 -> null\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Usa un contador para recorrer hasta el nodo anterior a la posici\xf3n."}),"\n",(0,a.jsxs)(n.li,{children:["Considera el caso cuando la posici\xf3n es 0 (usar ",(0,a.jsx)(n.code,{children:"addAtBeginning"}),")."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"reto-5-eliminar-por-valor",children:"Reto 5: Eliminar por valor"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," Avanzado"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 70 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," En parejas"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Crea un m\xe9todo ",(0,a.jsx)(n.code,{children:"deleteByValue(int value)"})," que elimine el primer nodo que contenga el valor dado. Si el valor no existe, debe mostrar un mensaje de error."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Lista inicial: 5 -> 7 -> 9 -> 7 -> null  \nEliminar 7: 5 -> 9 -> 7 -> null  \nEliminar 10: Valor no encontrado\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Si el nodo a eliminar es ",(0,a.jsx)(n.code,{children:"head"}),", actualiza la cabeza."]}),"\n",(0,a.jsx)(n.li,{children:"Usa dos punteros: uno para el nodo actual y otro para el anterior."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"lista-enlazada-doble",children:"Lista Enlazada Doble"}),"\n",(0,a.jsx)(n.h3,{id:"reto-1-construcci\xf3n-b\xe1sica-de-una-lista-doblemente-enlazada",children:"Reto 1: Construcci\xf3n b\xe1sica de una lista doblemente enlazada"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," B\xe1sico"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 30 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," Individual"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Crea una clase ",(0,a.jsx)(n.code,{children:"DoublyNode"})," con atributos ",(0,a.jsx)(n.code,{children:"data"}),", ",(0,a.jsx)(n.code,{children:"next"})," y ",(0,a.jsx)(n.code,{children:"prev"}),". Luego, crea una clase ",(0,a.jsx)(n.code,{children:"DoublyLinkedList"})," con un atributo ",(0,a.jsx)(n.code,{children:"head"}),". Implementa un m\xe9todo ",(0,a.jsx)(n.code,{children:"addAtEnd(int data)"})," que inserte nodos al final y un m\xe9todo ",(0,a.jsx)(n.code,{children:"printForward()"})," que muestre los elementos de izquierda a derecha."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Lista: 10 <-> 20 <-> 30 <-> null\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Si la lista est\xe1 vac\xeda, el nodo se convierte en la cabeza."}),"\n",(0,a.jsx)(n.li,{children:"Usa un puntero temporal para encontrar el \xfaltimo nodo."}),"\n",(0,a.jsxs)(n.li,{children:["Actualiza el ",(0,a.jsx)(n.code,{children:"prev"})," del nuevo nodo al conectarlo."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"reto-2-recorrer-en-ambos-sentidos",children:"Reto 2: Recorrer en ambos sentidos"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," B\xe1sico"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 35 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," En parejas"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Agrega a la clase ",(0,a.jsx)(n.code,{children:"DoublyLinkedList"})," el m\xe9todo ",(0,a.jsx)(n.code,{children:"printBackward()"})," que muestre los elementos desde el \xfaltimo hasta el primero."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Lista (adelante): 10 <-> 20 <-> 30 <-> null  \nLista (atr\xe1s): 30 <-> 20 <-> 10 <-> null\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Recorre la lista hasta el \xfaltimo nodo con un puntero."}),"\n",(0,a.jsxs)(n.li,{children:["Luego usa el puntero ",(0,a.jsx)(n.code,{children:"prev"})," para regresar nodo a nodo."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"reto-3-insertar-al-inicio-y-al-final",children:"Reto 3: Insertar al inicio y al final"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," Medio"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 45 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," Individual"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Implementa los m\xe9todos ",(0,a.jsx)(n.code,{children:"addAtBeginning(int data)"})," y ",(0,a.jsx)(n.code,{children:"addAtEnd(int data)"})," para insertar nodos en cualquiera de los extremos."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Insertando al inicio: 5 <-> 10 <-> 20 <-> 30 <-> null  \nInsertando al final: 5 <-> 10 <-> 20 <-> 30 <-> 40 <-> null\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Al insertar al inicio, el nuevo nodo apunta a la cabeza actual y se actualiza el ",(0,a.jsx)(n.code,{children:"prev"})," de la cabeza."]}),"\n",(0,a.jsxs)(n.li,{children:["Al insertar al final, actualiza el ",(0,a.jsx)(n.code,{children:"next"})," del \xfaltimo nodo y el ",(0,a.jsx)(n.code,{children:"prev"})," del nuevo nodo."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"listas-enlazada-circular-simple",children:"Listas Enlazada Circular Simple"}),"\n",(0,a.jsx)(n.h3,{id:"reto-1-resolver-el-problema-de-josephus",children:"Reto 1: Resolver el problema de Josephus"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," Avanzado"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 90 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," En parejas"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Usando la lista circular, implementa el ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"https://youtu.be/pkq_6DXycZg?si=r-quFc5qvowdVN2Y",children:"problema de Josephus"})}),": en un grupo de ",(0,a.jsx)(n.code,{children:"n"})," personas numeradas, se elimina cada ",(0,a.jsx)(n.code,{children:"k"}),"-\xe9sima persona hasta que solo quede una."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Personas: 1 -> 2 -> 3 -> 4 -> 5 -> (regresa a 1)\nk = 3\n\nPersonas tras eliminaciones:\nPersonas: 1 -> 2 -> 4 -> 5 (se elimina al 3, continua desde el 4)\nPersonas: 2 -> 4 -> 5 (se elimina al 1, continua desde el 2)\nPersonas: 2 -> 4 (se elimina al 5, continua desde el 2)\nPersonas: 4 (se elimina al 2, continua desde el 4)\n\nPersona sobreviviente: 4\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Personas: 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 -> 11 -> 12 -> (regresa a 1)\nk = 6\n\nPersonas tras eliminaciones:\nPersonas: 1 -> 2 -> 3 -> 4 -> 5 -> 7 -> 8 -> 9 -> 10 -> 11 -> 12 (se elimina al 6, continua desde el 7)\nPersonas: 1 -> 2 -> 3 -> 4 -> 5 -> 7 -> 8 -> 9 -> 10 -> 11 (se elimina al 12, continua desde el 1)\nPersonas: 1 -> 2 -> 3 -> 4 -> 5 -> 8 -> 9 -> 10 -> 11 (se elimina al 7, continua desde el 8)\nPersonas: 1 -> 3 -> 4 -> 5 -> 8 -> 9 -> 10 -> 11 (se elimina al 2, continua desde el 3)\nPersonas: 1 -> 3 -> 4 -> 5 -> 8 -> 9 -> 11 (se elimina al 10, continua desde el 11)\nPersonas: 1 -> 3 -> 4 -> 5 -> 9 -> 11 (se elimina al 8, continua desde el 9)\nPersonas: 1 -> 3 -> 4 -> 9 -> 11 (se elimina al 5, continua desde el 9)\nPersonas: 1 -> 3 -> 4 -> 11 (se elimina al 9, continua desde el 11)\nPersonas: 3 -> 4 -> 11 (se elimina al 1, continua desde el 3)\nPersonas: 3 -> 4 (se elimina al 11, continua desde el 3)\nPersonas: 3 (se elimina al 4, continua desde el 3)\n\nPersona sobreviviente: 3\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Usa la lista circular para avanzar ",(0,a.jsx)(n.code,{children:"k"})," posiciones y eliminar el nodo actual."]}),"\n",(0,a.jsx)(n.li,{children:"Repite el proceso hasta que solo quede un nodo en la lista."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"lista-enlazada-circular-doble",children:"Lista Enlazada Circular Doble"}),"\n",(0,a.jsx)(n.h3,{id:"reto-1-simular-un-sistema-de-turnos",children:"Reto 1: Simular un sistema de turnos"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," Avanzado"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 90 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," En parejas"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Usando la lista doblemente circular, crea un sistema que permita registrar personas en una fila de turnos y avanzar al siguiente o anterior turno en cualquier momento. Debe incluir m\xe9todos para:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Registrar una persona al final de la lista."}),"\n",(0,a.jsxs)(n.li,{children:["Avanzar al siguiente turno (",(0,a.jsx)(n.code,{children:"next"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:["Retroceder al turno anterior (",(0,a.jsx)(n.code,{children:"prev"}),")."]}),"\n",(0,a.jsx)(n.li,{children:"Mostrar el turno actual."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Personas: Ana <-> Luis <-> Marta <-> (regresa a Ana)  \nTurno actual: Ana  \nSiguiente turno: Luis  \nSiguiente turno: Marta  \nAnterior turno: Luis\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Usa un puntero ",(0,a.jsx)(n.code,{children:"current"})," para mantener el turno actual."]}),"\n",(0,a.jsxs)(n.li,{children:["Aprovecha los punteros ",(0,a.jsx)(n.code,{children:"next"})," y ",(0,a.jsx)(n.code,{children:"prev"})," para moverte entre los turnos."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"stack-pilas-lifo-implementaci\xf3n-con-arrays-y-listas-enlazadas",children:"Stack (Pilas): LIFO, implementaci\xf3n con arrays y listas enlazadas"}),"\n",(0,a.jsx)(n.h3,{id:"reto-1-validar-par\xe9ntesis-balanceados",children:"Reto 1: Validar par\xe9ntesis balanceados"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," B\xe1sico"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 35 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," En parejas"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Usando la clase ",(0,a.jsx)(n.code,{children:"StackArray"}),", implementa un m\xe9todo ",(0,a.jsx)(n.code,{children:"isBalanced(String expression)"})," que verifique si una cadena de par\xe9ntesis ",(0,a.jsx)(n.code,{children:"()"}),", llaves ",(0,a.jsx)(n.code,{children:"{}"})," y corchetes ",(0,a.jsx)(n.code,{children:"[]"})," est\xe1 balanceada."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:'Expresi\xf3n: "{[()]}" -> Balanceada\nExpresi\xf3n: "{[(])}" -> No balanceada\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Inserta caracteres de apertura en la pila."}),"\n",(0,a.jsx)(n.li,{children:"Cuando encuentres un cierre, verifica si coincide con el elemento en la cima."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"reto-2-deshacer-y-rehacer-undoredo",children:"Reto 2: Deshacer y rehacer (Undo/Redo)"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," Medio"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 60 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," En grupo (m\xe1x. 3 personas)"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Simula un sistema de edici\xf3n de texto con dos pilas:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Una pila ",(0,a.jsx)(n.code,{children:"undo"})," que almacene las acciones realizadas."]}),"\n",(0,a.jsxs)(n.li,{children:["Una pila ",(0,a.jsx)(n.code,{children:"redo"})," que almacene las acciones deshechas."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Debes permitir:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Escribir texto."}),"\n",(0,a.jsxs)(n.li,{children:["Deshacer la \xfaltima acci\xf3n (",(0,a.jsx)(n.code,{children:"undo"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:["Rehacer la \xfaltima acci\xf3n (",(0,a.jsx)(n.code,{children:"redo"}),")."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:'Texto: "Hola"\nUndo -> Texto: ""\nRedo -> Texto: "Hola"\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Cada acci\xf3n puede representarse como una cadena con el texto agregado o eliminado."}),"\n",(0,a.jsx)(n.li,{children:"Usa dos instancias de la pila para controlar las operaciones."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"reto-3-evaluar-expresiones-en-notaci\xf3n-postfija-rpn",children:"Reto 3: Evaluar expresiones en notaci\xf3n postfija (RPN)"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," Avanzado"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 90 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," En parejas"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Usando una pila, implementa un m\xe9todo ",(0,a.jsx)(n.code,{children:"evaluateRPN(String expression)"})," que eval\xfae expresiones en ",(0,a.jsx)(n.a,{href:"https://medium.com/@interviewbuddies/reverse-polish-notation-b88524252960",children:"notaci\xf3n postfija"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Ejemplo:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:'Expresi\xf3n: "5 1 2 + 4 * + 3 -"  \nResultado: 14\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:'Expresi\xf3n: "40 15 + 33 11 - 22 / 3 + *"  \nResultado: 220\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Recorre la expresi\xf3n por tokens."}),"\n",(0,a.jsxs)(n.li,{children:["Si el token es un n\xfamero, haz ",(0,a.jsx)(n.code,{children:"push"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Si es un operador, haz ",(0,a.jsx)(n.code,{children:"pop"})," de los dos \xfaltimos valores, eval\xfaa y haz ",(0,a.jsx)(n.code,{children:"push"})," del resultado."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"queue-colas-fifo-variantes-colas-dobles-de-prioridad",children:"Queue (Colas): FIFO, variantes (colas dobles, de prioridad)"}),"\n",(0,a.jsx)(n.h3,{id:"reto-1-simular-una-fila-de-atenci\xf3n-al-cliente",children:"Reto 1: Simular una fila de atenci\xf3n al cliente"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," Medio"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 50 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," Individual"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Simula una fila de atenci\xf3n al cliente usando la clase ",(0,a.jsx)(n.code,{children:"QueueLinkedList"}),". Cada cliente tiene un nombre y un n\xfamero de turno. Debes permitir:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Registrar un cliente (",(0,a.jsx)(n.code,{children:"enqueue"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:["Atender un cliente (",(0,a.jsx)(n.code,{children:"dequeue"}),")."]}),"\n",(0,a.jsx)(n.li,{children:"Mostrar el siguiente cliente en ser atendido."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Clientes en fila: Ana -> Luis -> Marta\nAtendiendo a: Ana\nSiguiente cliente: Luis\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Crea una clase ",(0,a.jsx)(n.code,{children:"Cliente"})," con atributos ",(0,a.jsx)(n.code,{children:"nombre"})," y ",(0,a.jsx)(n.code,{children:"turno"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Al hacer ",(0,a.jsx)(n.code,{children:"dequeue"}),", muestra el cliente atendido."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"reto-2-cola-de-prioridad-b\xe1sica",children:"Reto 2: Cola de prioridad b\xe1sica"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," Medio"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 60 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," En grupo (m\xe1x. 3 personas)"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Crea una clase ",(0,a.jsx)(n.code,{children:"PriorityQueue"})," que inserte elementos en funci\xf3n de su prioridad (entero). Los elementos con mayor prioridad deben salir primero al hacer ",(0,a.jsx)(n.code,{children:"dequeue()"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Resultado esperado:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Insertando: (Ana, 2), (Luis, 5), (Marta, 1)\ndequeue() -> Luis (prioridad 5)\ndequeue() -> Ana (prioridad 2)\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Al insertar, coloca el nuevo elemento en la posici\xf3n correcta seg\xfan su prioridad."}),"\n",(0,a.jsxs)(n.li,{children:["Considera usar un ",(0,a.jsx)(n.code,{children:"ArrayList"})," o un arreglo redimensionable."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"reto-3-cola-doble-deque",children:"Reto 3: Cola doble (Deque)"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Nivel:"})," Avanzado"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Tiempo estimado de resoluci\xf3n:"})," 90 minutos"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Participantes:"})," En parejas"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Enunciado:"})," Crea una clase ",(0,a.jsx)(n.code,{children:"Deque"})," que permita insertar y eliminar elementos tanto al inicio como al final de la cola. Debe contener los m\xe9todos:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"addFirst(int data)"})," y ",(0,a.jsx)(n.code,{children:"addLast(int data)"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"removeFirst()"})," y ",(0,a.jsx)(n.code,{children:"removeLast()"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"peekFirst()"})," y ",(0,a.jsx)(n.code,{children:"peekLast()"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Resultado esperado:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",children:"Cola: 2 <-> 4 <-> 6\nremoveFirst() -> 2\nremoveLast() -> 6\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Pistas o ayudas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Puedes implementar esta estructura con nodos dobles (",(0,a.jsx)(n.code,{children:"prev"})," y ",(0,a.jsx)(n.code,{children:"next"}),")."]}),"\n",(0,a.jsx)(n.li,{children:"Si se usan arreglos, considera el comportamiento circular."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}}}]);