"use strict";(self.webpackChunkdata_structures=self.webpackChunkdata_structures||[]).push([[1777],{1470:(e,n,a)=>{a.d(n,{A:()=>_});var t=a(6540),s=a(4164),r=a(3104),i=a(6347),l=a(205),o=a(7485),c=a(1682),d=a(679);function u(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:n,children:a}=e;return(0,t.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:a,default:t}})=>({value:e,label:n,attributes:a,default:t}))}(a);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,a])}function h({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const a=(0,i.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(s),(0,t.useCallback)(e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})},[s,a])]}function x(e){const{defaultValue:n,queryString:a=!1,groupId:s}=e,r=p(e),[i,o]=(0,t.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=n.find(e=>e.default)??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r})),[c,u]=m({queryString:a,groupId:s}),[x,k]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[a,s]=(0,d.Dv)(n);return[a,(0,t.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:s}),j=(()=>{const e=c??x;return h({value:e,tabValues:r})?e:null})();(0,l.A)(()=>{j&&o(j)},[j]);return{selectedValue:i,selectValue:(0,t.useCallback)(e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),k(e)},[u,k,r]),tabValues:r}}var k=a(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=a(4848);function f({className:e,block:n,selectedValue:a,selectValue:t,tabValues:i}){const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,r.a_)(),c=e=>{const n=e.currentTarget,s=l.indexOf(n),r=i[s].value;r!==a&&(o(n),t(r))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=l.indexOf(e.currentTarget)+1;n=l[a]??l[0];break}case"ArrowLeft":{const a=l.indexOf(e.currentTarget)-1;n=l[a]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},e),children:i.map(({value:e,label:n,attributes:t})=>(0,v.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{l.push(e)},onKeyDown:d,onClick:c,...t,className:(0,s.A)("tabs__item",j.tabItem,t?.className,{"tabs__item--active":a===e}),children:n??e},e))})}function b({lazy:e,children:n,selectedValue:a}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===a);return e?(0,t.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:r.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a}))})}function g(e){const n=x(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container",j.tabList),children:[(0,v.jsx)(f,{...n,...e}),(0,v.jsx)(b,{...n,...e})]})}function _(e){const n=(0,k.A)();return(0,v.jsx)(g,{...e,children:u(e.children)},String(n))}},1508:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"linear_structures_and_use_of_nodes/stack","title":"Stack (Pilas): LIFO, implementaci\xf3n con arrays y listas enlazadas","description":"Una pila (Stack) es una estructura de datos lineal que sigue el principio LIFO (Last In, First Out), es decir, el \xfaltimo elemento en entrar es el primero en salir.","source":"@site/docs/04_linear_structures_and_use_of_nodes/06_stack.md","sourceDirName":"04_linear_structures_and_use_of_nodes","slug":"/linear_structures_and_use_of_nodes/stack","permalink":"/Data_Structures/en/docs/linear_structures_and_use_of_nodes/stack","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/04_linear_structures_and_use_of_nodes/06_stack.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar-position":6},"sidebar":"tutorialSidebar","previous":{"title":"Lista Enlazada Circular Doble","permalink":"/Data_Structures/en/docs/linear_structures_and_use_of_nodes/doubly_circular_linked_list"},"next":{"title":"Queue (Colas): FIFO, variantes (colas dobles, de prioridad)","permalink":"/Data_Structures/en/docs/linear_structures_and_use_of_nodes/queue"}}');var s=a(4848),r=a(8453),i=a(1470),l=a(9365);const o={"sidebar-position":6},c="Stack (Pilas): LIFO, implementaci\xf3n con arrays y listas enlazadas",d={},u=[{value:"Caracter\xedsticas",id:"caracter\xedsticas",level:2},{value:"Ejemplo de LIFO",id:"ejemplo-de-lifo",level:2},{value:"Implementaci\xf3n",id:"implementaci\xf3n",level:2},{value:"Flujo de operaciones LIFO",id:"flujo-de-operaciones-lifo",level:2},{value:"Representaci\xf3n visual",id:"representaci\xf3n-visual",level:2},{value:"Ejemplo T\xe9cnico",id:"ejemplo-t\xe9cnico",level:2},{value:"Aplicaciones Pr\xe1cticas",id:"aplicaciones-pr\xe1cticas",level:2},{value:"Buenas pr\xe1cticas",id:"buenas-pr\xe1cticas",level:2},{value:"Diagrama de secuencia",id:"diagrama-de-secuencia",level:2},{value:"Referencias",id:"referencias",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"stack-pilas-lifo-implementaci\xf3n-con-arrays-y-listas-enlazadas",children:"Stack (Pilas): LIFO, implementaci\xf3n con arrays y listas enlazadas"})}),"\n",(0,s.jsxs)(n.p,{children:["Una ",(0,s.jsx)(n.strong,{children:"pila (Stack)"})," es una estructura de datos lineal que sigue el principio ",(0,s.jsx)(n.strong,{children:"LIFO (Last In, First Out)"}),", es decir, el \xfaltimo elemento en entrar es el primero en salir."]}),"\n",(0,s.jsx)(n.h2,{id:"caracter\xedsticas",children:"Caracter\xedsticas"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Solo permite inserciones y eliminaciones por un extremo, llamado ",(0,s.jsx)(n.strong,{children:"tope (top)"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Operaciones fundamentales:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"push:"})," Inserta un elemento en el tope de la pila."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"pop:"})," Elimina y devuelve el elemento del tope de la pila."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"peek (o top):"})," Devuelve el elemento en el tope sin eliminarlo."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"isEmpty:"})," Verifica si la pila est\xe1 vac\xeda."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"ejemplo-de-lifo",children:"Ejemplo de LIFO"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Una pila de platos:"})," el \xfaltimo plato en ponerse es el primero que se retira."]}),"\n",(0,s.jsx)(n.h2,{id:"implementaci\xf3n",children:"Implementaci\xf3n"}),"\n",(0,s.jsx)(n.p,{children:"Las pilas pueden implementarse de dos maneras:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Usando arrays:"})," Aprovecha los \xedndices del arreglo para insertar o eliminar en el final."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Usando listas enlazadas:"})," Cada nodo contiene un dato y una referencia al siguiente nodo, y el tope se mueve din\xe1micamente."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"flujo-de-operaciones-lifo",children:"Flujo de operaciones LIFO"}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart TD\n    A[Push: agregar elemento] --\x3e B[Top apunta al nuevo elemento]\n    B --\x3e C[Push otro elemento]\n    C --\x3e D[Top apunta al nuevo elemento]\n    D --\x3e E[Pop: quitar elemento]\n    E --\x3e F[Top apunta al elemento anterior]"}),"\n",(0,s.jsx)(n.h2,{id:"representaci\xf3n-visual",children:"Representaci\xf3n visual"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph TD\n    T[Top] --\x3e N1[Elemento 3]\n    N1 --\x3e N2[Elemento 2]\n    N2 --\x3e N3[Elemento 1]\n    N3 --\x3e Null[null]"}),"\n",(0,s.jsx)(n.h2,{id:"ejemplo-t\xe9cnico",children:"Ejemplo T\xe9cnico"}),"\n","\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(l.A,{value:"java",label:"Paradigma: Orientado a Objetos",children:(0,s.jsxs)(i.A,{children:[(0,s.jsxs)(l.A,{value:"code",label:"C\xf3digo Java Ejemplo",children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Implementaci\xf3n con arrays:"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="StackArray.java" showLineNumbers',children:'public class StackArray<T> {\n    private Object[] elements;\n    private int top;\n    private int capacity;\n\n    public StackArray(int size) {\n        capacity = size;\n        elements = new Object[size];\n        top = -1;\n    }\n\n    public void push(T data) {\n        if (top == capacity - 1) throw new RuntimeException("Stack overflow");\n        elements[++top] = data;\n    }\n\n    public T pop() {\n        if (isEmpty()) throw new RuntimeException("Stack underflow");\n        return (T) elements[top--];\n    }\n\n    public T peek() {\n        if (isEmpty()) throw new RuntimeException("Stack is empty");\n        return (T) elements[top];\n    }\n\n    public boolean isEmpty() {\n        return top == -1;\n    }\n}\n'})}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Implementaci\xf3n con listas enlazadas:"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="StackLinkedList.java" showLineNumbers',children:'class Node<T> {\n    T data;\n    Node<T> next;\n    Node(T data) { this.data = data; }\n}\n\npublic class StackLinkedList<T> {\n    private Node<T> top;\n\n    public void push(T data) {\n        Node<T> newNode = new Node<>(data);\n        newNode.next = top;\n        top = newNode;\n    }\n\n    public T pop() {\n        if (isEmpty()) throw new RuntimeException("Stack underflow");\n        T data = top.data;\n        top = top.next;\n        return data;\n    }\n\n    public T peek() {\n        if (isEmpty()) throw new RuntimeException("Stack is empty");\n        return top.data;\n    }\n\n    public boolean isEmpty() {\n        return top == null;\n    }\n}\n'})})]}),(0,s.jsx)(l.A,{value:"test",label:"Test Unitario",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:"showLineNumbers",children:"import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackTest {\n    @Test\n    void testPushPopArray() {\n        StackArray<Integer> stack = new StackArray<>(3);\n        stack.push(10);\n        stack.push(20);\n        assertEquals(20, stack.pop());\n        assertEquals(10, stack.pop());\n    }\n\n    @Test\n    void testPushPopLinkedList() {\n        StackLinkedList<Integer> stack = new StackLinkedList<>();\n        stack.push(5);\n        stack.push(15);\n        assertEquals(15, stack.pop());\n        assertEquals(5, stack.pop());\n    }\n}\n"})})})]})}),(0,s.jsx)(l.A,{value:"python",label:"Paradigma: Procedural",children:(0,s.jsxs)(i.A,{children:[(0,s.jsxs)(l.A,{value:"code",label:"C\xf3digo Python Ejemplo",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Implementaci\xf3n con listas:"})," (arrays din\xe1micos en Python)"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",metastring:"showLineNumbers",children:'def create_stack():\n    return []\n\ndef push(stack, data):\n    stack.append(data)\n\ndef pop(stack):\n    if is_empty(stack):\n        raise IndexError("Stack underflow")\n    return stack.pop()\n\ndef peek(stack):\n    if is_empty(stack):\n        raise IndexError("Stack is empty")\n    return stack[-1]\n\ndef is_empty(stack):\n    return len(stack) == 0\n'})}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Implementaci\xf3n con listas enlazadas:"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",metastring:"showLineNumbers",children:'class Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\ndef create_linked_stack():\n    return None\n\ndef push_linked(top, data):\n    new_node = Node(data)\n    new_node.next = top\n    return new_node\n\ndef pop_linked(top):\n    if top is None:\n        raise IndexError("Stack underflow")\n    return top.next, top.data\n\ndef peek_linked(top):\n    if top is None:\n        raise IndexError("Stack is empty")\n    return top.data\n\ndef is_empty_linked(top):\n    return top is None\n'})})]}),(0,s.jsx)(l.A,{value:"test",label:"Test Unitario",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",metastring:"showLineNumbers",children:"from stack import create_stack, push, pop, peek, is_empty\n\ndef test_stack_array():\n    stack = create_stack()\n    push(stack, 1)\n    push(stack, 2)\n    assert pop(stack) == 2\n    assert peek(stack) == 1\n\ndef test_stack_linked():\n    from stack import create_linked_stack, push_linked, pop_linked, peek_linked\n    top = create_linked_stack()\n    top = push_linked(top, 5)\n    top = push_linked(top, 10)\n    top, data = pop_linked(top)\n    assert data == 10\n    assert peek_linked(top) == 5\n"})})})]})}),(0,s.jsx)(l.A,{value:"ts",label:"Paradigma: Funcional",children:(0,s.jsxs)(i.A,{children:[(0,s.jsxs)(l.A,{value:"code",label:"C\xf3digo TS Ejemplo",children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Implementaci\xf3n con arrays:"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'export const createStack = <T>(): T[] => [];\n\nexport const push = <T>(stack: T[], data: T): void => {\n  stack.push(data);\n};\n\nexport const pop = <T>(stack: T[]): T => {\n  if (isEmpty(stack)) throw new Error("Stack underflow");\n  return stack.pop()!;\n};\n\nexport const peek = <T>(stack: T[]): T => {\n  if (isEmpty(stack)) throw new Error("Stack is empty");\n  return stack[stack.length - 1];\n};\n\nexport const isEmpty = <T>(stack: T[]): boolean => stack.length === 0;\n'})}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Implementaci\xf3n con listas enlazadas:"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'export type Node<T> = {\n  data: T;\n  next: Node<T> | null;\n};\n\nexport const pushLinked = <T>(top: Node<T> | null, data: T): Node<T> => {\n  return { data, next: top };\n};\n\nexport const popLinked = <T>(top: Node<T> | null): { top: Node<T> | null; data: T } => {\n  if (!top) throw new Error("Stack underflow");\n  return { top: top.next, data: top.data };\n};\n\nexport const peekLinked = <T>(top: Node<T> | null): T => {\n  if (!top) throw new Error("Stack is empty");\n  return top.data;\n};\n\nexport const isEmptyLinked = <T>(top: Node<T> | null): boolean => !top;\n'})})]}),(0,s.jsx)(l.A,{value:"test",label:"Test Unitario",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:'import { createStack, push, pop, peek } from "./stack";\n\ntest("stack array push and pop", () => {\n  const stack = createStack<number>();\n  push(stack, 1);\n  push(stack, 2);\n  expect(pop(stack)).toBe(2);\n  expect(peek(stack)).toBe(1);\n});\n'})})})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"aplicaciones-pr\xe1cticas",children:"Aplicaciones Pr\xe1cticas"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Navegadores web:"})," Historial de p\xe1ginas (ir atr\xe1s/adelante)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Evaluadores de expresiones:"})," Manejo de operadores y operandos."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Recursi\xf3n:"})," La pila del sistema almacena llamadas a funciones."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Deshacer/Rehacer:"})," En editores de texto o gr\xe1ficos."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buenas-pr\xe1cticas",children:"Buenas pr\xe1cticas"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SRP:"})," La pila debe encargarse solo de almacenar y recuperar elementos."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Nombres claros:"})," ",(0,s.jsx)(n.code,{children:"push"}),", ",(0,s.jsx)(n.code,{children:"pop"}),", ",(0,s.jsx)(n.code,{children:"peek"})," indican exactamente su prop\xf3sito."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pruebas unitarias:"})," Validar condiciones de desbordamiento y subdesbordamiento."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Abstracci\xf3n:"})," Las implementaciones (array o lista) pueden cambiar sin afectar la interfaz."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"diagrama-de-secuencia",children:"Diagrama de secuencia"}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\n    autonumber\n    participant User\n    participant Stack\n    participant Node\n\n    User->>Stack: push(10)\n    activate Stack\n    Stack->>Node: Crear nuevo nodo con valor 10\n    Node--\x3e>Stack: Nodo creado\n    Stack->>Stack: Asignar nuevo nodo como top\n    deactivate Stack\n\n    User->>Stack: push(20)\n    activate Stack\n    Stack->>Node: Crear nuevo nodo con valor 20\n    Node--\x3e>Stack: Nodo creado\n    Stack->>Stack: Enlazar nuevo nodo con top anterior\n    Stack->>Stack: Actualizar top\n    deactivate Stack\n\n    User->>Stack: peek()\n    activate Stack\n    Stack--\x3e>User: Devuelve valor del nodo top (20)\n    deactivate Stack\n\n    User->>Stack: pop()\n    activate Stack\n    Stack->>Stack: Verificar si est\xe1 vac\xeda\n    Stack->>Stack: Guardar valor de top (20)\n    Stack->>Stack: Mover top al siguiente nodo\n    Stack--\x3e>User: Devuelve valor 20\n    deactivate Stack"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"El usuario solicita insertar el elemento 10."}),"\n",(0,s.jsx)(n.li,{children:"El Stack recibe la informaci\xf3n y solicita crear un nodo con el valor enviado."}),"\n",(0,s.jsx)(n.li,{children:"Se crea un nodo con valor 10 y se le informa a la pila."}),"\n",(0,s.jsx)(n.li,{children:"Dentro de la pila asigna el nuevo nodo como top de la pila."}),"\n",(0,s.jsx)(n.li,{children:"El usuario solicita insertar el elemento 20."}),"\n",(0,s.jsx)(n.li,{children:"El Stack recibe la informaci\xf3n y solicita crear un nodo con el valor enviado."}),"\n",(0,s.jsx)(n.li,{children:"Se crea un nodo con valor 20 y se le informa a la pila."}),"\n",(0,s.jsx)(n.li,{children:"En la pila, el nuevo nodo se enlaza con el nodo anterior mediante una referencia."}),"\n",(0,s.jsx)(n.li,{children:"Dentro de la pila asigna el nuevo nodo como top de la pila."}),"\n",(0,s.jsx)(n.li,{children:"El usuario solicita ver el elemento en el tope."}),"\n",(0,s.jsx)(n.li,{children:"La pila devuelve el valor 20 sin eliminarlo."}),"\n",(0,s.jsx)(n.li,{children:"El usuario solicita eliminar el elemento en el tope."}),"\n",(0,s.jsx)(n.li,{children:"Se verifica que la pila no est\xe9 vac\xeda."}),"\n",(0,s.jsx)(n.li,{children:"Se obtiene el valor 20 y se guarda en una nueva variable."}),"\n",(0,s.jsx)(n.li,{children:"Se actualiza el top al nodo siguiente (10), en otras palabras, se elimina del stack."}),"\n",(0,s.jsx)(n.li,{children:"Se devuelve el valor eliminado."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"referencias",children:"Referencias"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Cormen, T. H., Leiserson, C. E., Rivest, R. L., & Stein, C. (2022). Introduction to Algorithms (4th ed.). MIT Press."}),"\n",(0,s.jsx)(n.li,{children:"Weiss, M. A. (2020). Data Structures and Algorithm Analysis in Java (4th ed.). Pearson."}),"\n",(0,s.jsx)(n.li,{children:"McDowell, G. (2016). Cracking the Coding Interview. CareerCup."}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.python.org/3/tutorial",children:"Python 3"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://jestjs.io/docs/getting-started",children:"Jest"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var t=a(6540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},9365:(e,n,a)=>{a.d(n,{A:()=>i});a(6540);var t=a(4164);const s={tabItem:"tabItem_Ymn6"};var r=a(4848);function i({children:e,hidden:n,className:a}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(s.tabItem,a),hidden:n,children:e})}}}]);