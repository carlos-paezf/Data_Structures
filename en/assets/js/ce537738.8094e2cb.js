"use strict";(globalThis.webpackChunkdata_structures=globalThis.webpackChunkdata_structures||[]).push([[6948],{1470:(e,n,r)=>{r.d(n,{A:()=>y});var a=r(6540),s=r(4164),i=r(3104),t=r(6347),l=r(205),o=r(7485),d=r(1682),c=r(679);function u(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:r}=e;return(0,a.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:r,default:a}})=>({value:e,label:n,attributes:r,default:a}))}(r);return function(e){const n=(0,d.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,r])}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const r=(0,t.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(s),(0,a.useCallback)(e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})},[s,r])]}function j(e){const{defaultValue:n,queryString:r=!1,groupId:s}=e,i=h(e),[t,o]=(0,a.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find(e=>e.default)??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i})),[d,u]=m({queryString:r,groupId:s}),[j,x]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,s]=(0,c.Dv)(n);return[r,(0,a.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:s}),b=(()=>{const e=d??j;return p({value:e,tabValues:i})?e:null})();(0,l.A)(()=>{b&&o(b)},[b]);return{selectedValue:t,selectValue:(0,a.useCallback)(e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),x(e)},[u,x,i]),tabValues:i}}var x=r(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=r(4848);function g({className:e,block:n,selectedValue:r,selectValue:a,tabValues:t}){const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,i.a_)(),d=e=>{const n=e.currentTarget,s=l.indexOf(n),i=t[s].value;i!==r&&(o(n),a(i))},c=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},e),children:t.map(({value:e,label:n,attributes:a})=>(0,v.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{l.push(e)},onKeyDown:c,onClick:d,...a,className:(0,s.A)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":r===e}),children:n??e},e))})}function f({lazy:e,children:n,selectedValue:r}){const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===r);return e?(0,a.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function N(e){const n=j(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container",b.tabList),children:[(0,v.jsx)(g,{...n,...e}),(0,v.jsx)(f,{...n,...e})]})}function y(e){const n=(0,x.A)();return(0,v.jsx)(N,{...e,children:u(e.children)},String(n))}},2356:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"nolinear_structures_trees/definition_and_representation","title":"Definici\xf3n y Representaci\xf3n","description":"Un \xe1rbol es una estructura de datos jer\xe1rquica y no lineal, compuesta por nodos conectados por aristas (enlaces). A diferencia de listas o arreglos, donde los datos se almacenan secuencialmente, los \xe1rboles permiten representar relaciones padre-hijo, jerarqu\xedas y ramificaciones.","source":"@site/docs/06_nolinear_structures_trees/01_definition_and_representation.md","sourceDirName":"06_nolinear_structures_trees","slug":"/nolinear_structures_trees/definition_and_representation","permalink":"/Data_Structures/en/docs/nolinear_structures_trees/definition_and_representation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/06_nolinear_structures_trees/01_definition_and_representation.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar-position":1},"sidebar":"tutorialSidebar","previous":{"title":"Estructuras no lineales - \xc1rboles","permalink":"/Data_Structures/en/docs/category/estructuras-no-lineales---\xe1rboles"},"next":{"title":"\xc1rboles Binarios","permalink":"/Data_Structures/en/docs/nolinear_structures_trees/binary_tree"}}');var s=r(4848),i=r(8453),t=r(1470),l=r(9365);const o={"sidebar-position":1},d="Definici\xf3n y Representaci\xf3n",c={},u=[{value:"Propiedades b\xe1sicas de un \xe1rbol",id:"propiedades-b\xe1sicas-de-un-\xe1rbol",level:2},{value:"Terminolog\xeda clave",id:"terminolog\xeda-clave",level:2},{value:"Representaci\xf3n de \xc1rboles",id:"representaci\xf3n-de-\xe1rboles",level:2},{value:"Representaci\xf3n visual",id:"representaci\xf3n-visual",level:2},{value:"Diagrama de clases",id:"diagrama-de-clases",level:2},{value:"Ejemplo t\xe9cnico",id:"ejemplo-t\xe9cnico",level:2},{value:"Aplicaciones Reales",id:"aplicaciones-reales",level:2},{value:"Referencias",id:"referencias",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"definici\xf3n-y-representaci\xf3n",children:"Definici\xf3n y Representaci\xf3n"})}),"\n",(0,s.jsxs)(n.p,{children:["Un \xe1rbol es una estructura de datos ",(0,s.jsx)(n.strong,{children:"jer\xe1rquica"})," y ",(0,s.jsx)(n.strong,{children:"no lineal"}),", compuesta por ",(0,s.jsx)(n.strong,{children:"nodos conectados"})," por aristas (enlaces). A diferencia de listas o arreglos, donde los datos se almacenan secuencialmente, los \xe1rboles permiten representar relaciones padre-hijo, jerarqu\xedas y ramificaciones."]}),"\n",(0,s.jsx)(n.h2,{id:"propiedades-b\xe1sicas-de-un-\xe1rbol",children:"Propiedades b\xe1sicas de un \xe1rbol"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Tiene un ",(0,s.jsx)(n.strong,{children:"nodo ra\xedz"})," (root), el \xfanico sin padre."]}),"\n",(0,s.jsxs)(n.li,{children:["Cada nodo puede tener ",(0,s.jsx)(n.strong,{children:"cero o m\xe1s hijos"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"No existen ciclos."}),"\n",(0,s.jsx)(n.li,{children:"Hay exactamente un camino entre la ra\xedz y cualquier otro nodo."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"terminolog\xeda-clave",children:"Terminolog\xeda clave"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"T\xe9rmino"}),(0,s.jsx)(n.th,{children:"Definici\xf3n"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Nodo (Node)"}),(0,s.jsx)(n.td,{children:"Elemento que contiene un valor y referencias a otros nodos"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Ra\xedz (Root)"}),(0,s.jsx)(n.td,{children:"Nodo inicial del \xe1rbol."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Hijo (Child)"}),(0,s.jsx)(n.td,{children:"Nodo descendiente directo de otro nodo."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Padre (Parent)"}),(0,s.jsx)(n.td,{children:"Nodo del cual proviene un hijo."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Hoja (Leaf)"}),(0,s.jsx)(n.td,{children:"Nodo sin hijos."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Nivel (Level)"}),(0,s.jsx)(n.td,{children:"Profundidad desde la ra\xedz (ra\xedz = nivel 0)."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Altura (Height"}),(0,s.jsx)(n.td,{children:"Longitud del camino m\xe1s largo desde la ra\xedz hasta una hoja"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Sub\xe1rbol"}),(0,s.jsx)(n.td,{children:"\xc1rbol contenido dentro de otro \xe1rbol."})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"representaci\xf3n-de-\xe1rboles",children:"Representaci\xf3n de \xc1rboles"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Representaci\xf3n con nodos enlazados:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",metastring:"showLineNumbers",children:"class Node {\n    value\n    left\n    right\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Cada nodo contiene su valor y punteros a hijos. Com\xfan en \xe1rboles binarios"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Representaci\xf3n con listas de hijos"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",metastring:"showLineNumbers",children:"class Node {\n    value\n    children = []\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Permite m\xfaltiples hijos (n-arios), \xfatil para \xe1rboles generales."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Representaci\xf3n con arreglos (para \xe1rboles completos o heaps)"}),"\n",(0,s.jsx)(n.p,{children:"Usado cuando los nodos tienen una posici\xf3n fija como en un \xe1rbol binario completo."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",metastring:"showLineNumbers",children:"Index i:\n Left child  = 2i + 1\n Right child = 2i + 2\n Parent      = floor((i - 1) / 2)\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"representaci\xf3n-visual",children:"Representaci\xf3n visual"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph TD\n    A[Ra\xedz: 8]\n    B[Izquierda: 3]\n    C[Derecha: 10]\n    D[Izquierda: 1]\n    E[Derecha: 6]\n    F[Derecha: 14]\n    G[Izquierda: 4]\n    H[Derecha: 7]\n    I[Izquierda: 13]\n\n    A --\x3e B\n    A --\x3e C\n    B --\x3e D\n    B --\x3e E\n    E --\x3e G\n    E --\x3e H\n    C --\x3e F\n    F --\x3e I"}),"\n",(0,s.jsx)(n.h2,{id:"diagrama-de-clases",children:"Diagrama de clases"}),"\n",(0,s.jsx)(n.p,{children:"El siguiente es un diagrama a de clase sobre un \xe1rbol gen\xe9rico y binario."}),"\n",(0,s.jsx)(n.mermaid,{value:"classDiagram\n    class TreeNode {\n        +value: any\n        +children: TreeNode[]\n    }\n\n    class BinaryNode {\n        +value: any\n        +left: BinaryNode\n        +right: BinaryNode\n    }\n\n    TreeNode <|-- BinaryNode"}),"\n",(0,s.jsx)(n.h2,{id:"ejemplo-t\xe9cnico",children:"Ejemplo t\xe9cnico"}),"\n","\n",(0,s.jsxs)(t.A,{children:[(0,s.jsx)(l.A,{value:"java",label:"Paradigma: Orientado a Objetos",children:(0,s.jsxs)(t.A,{children:[(0,s.jsx)(l.A,{value:"code",label:"C\xf3digo Java Ejemplo",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:"showLineNumbers",children:"public class TreeNode {\n    int value;\n    List<TreeNode> children;\n\n    public TreeNode(int value) {\n        this.value = value;\n        this.children = new ArrayList<>();\n    }\n\n    public void addChild(TreeNode child) {\n        children.add(child);\n    }\n}\n"})})}),(0,s.jsx)(l.A,{value:"test",label:"Test Unitario",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:"showLineNumbers",children:"@Test\nvoid testAddChild() {\n    TreeNode root = new TreeNode(10);\n    TreeNode child = new TreeNode(5);\n    root.addChild(child);\n    assertEquals(1, root.children.size());\n}\n"})})})]})}),(0,s.jsx)(l.A,{value:"python",label:"Paradigma: Procedural",children:(0,s.jsxs)(t.A,{children:[(0,s.jsx)(l.A,{value:"code",label:"C\xf3digo Python Ejemplo",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:"def create_node(value):\n    return {'value': value, 'children': []}\n\ndef add_child(parent, child):\n    parent['children'].append(child)\n"})})}),(0,s.jsx)(l.A,{value:"test",label:"Test Unitario",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:"def test_add_child():\n    root = create_node(10)\n    child = create_node(5)\n    add_child(root, child)\n    assert len(root['children']) == 1\n"})})})]})}),(0,s.jsx)(l.A,{value:"ts",label:"Paradigma: Funcional",children:(0,s.jsxs)(t.A,{children:[(0,s.jsx)(l.A,{value:"code",label:"C\xf3digo TypeScript Ejemplo",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"export type TreeNode = {\n  value: number;\n  children: TreeNode[];\n};\n\nexport const createNode = (value: number): TreeNode => ({\n  value,\n  children: [],\n});\n\nexport const addChild = (parent: TreeNode, child: TreeNode): TreeNode => ({\n  ...parent,\n  children: [...parent.children, child],\n});\n"})})}),(0,s.jsx)(l.A,{value:"ts",label:"Test Unitario",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"import { createNode, addChild } from './Tree';\n\ntest('add child to tree node', () => {\n  const root = createNode(10);\n  const child = createNode(5);\n  const updatedRoot = addChild(root, child);\n  expect(updatedRoot.children.length).toBe(1);\n});\n"})})})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"aplicaciones-reales",children:"Aplicaciones Reales"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Estructura del DOM en navegadores."}),"\n",(0,s.jsx)(n.li,{children:"Sistemas de archivos (carpetas y subcarpetas)."}),"\n",(0,s.jsx)(n.li,{children:"\xc1rboles geneal\xf3gicos y jerarqu\xedas organizacionales."}),"\n",(0,s.jsx)(n.li,{children:"Compiladores (\xe1rboles de sintaxis abstracta)."}),"\n",(0,s.jsx)(n.li,{children:"Bases de datos (\xedndices B-Tree)."}),"\n",(0,s.jsx)(n.li,{children:"Juegos (\xe1rboles de decisi\xf3n)."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"referencias",children:"Referencias"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Cormen, T. H., Leiserson, C. E., Rivest, R. L., & Stein, C. (2022). Introduction to Algorithms (4th ed.). MIT Press."}),"\n",(0,s.jsx)(n.li,{children:"Goodrich, M. T., Tamassia, R., & Goldwasser, M. H. (2014). Data Structures and Algorithms in Java (6th ed.). Wiley."}),"\n",(0,s.jsx)(n.li,{children:"Weiss, M. A. (2020). Data Structures and Algorithm Analysis in Java (4th ed.). Pearson."}),"\n",(0,s.jsx)(n.li,{children:"Sedgewick, R., & Wayne, K. (2011). Algorithms (4th ed.). Addison-Wesley."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>l});var a=r(6540);const s={},i=a.createContext(s);function t(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),a.createElement(i.Provider,{value:n},e.children)}},9365:(e,n,r)=>{r.d(n,{A:()=>t});r(6540);var a=r(4164);const s={tabItem:"tabItem_Ymn6"};var i=r(4848);function t({children:e,hidden:n,className:r}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,r),hidden:n,children:e})}}}]);