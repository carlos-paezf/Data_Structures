"use strict";(self.webpackChunkdata_structures=self.webpackChunkdata_structures||[]).push([[4901],{7934:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>t,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"sorting_algorithms/sorting_fundamentals","title":"Fundamentos del ordenamiento: estabilidad, adaptabilidad y comparaciones","description":"El ordenamiento (sorting) es el proceso de organizar los elementos de una colecci\xf3n (arreglo, lista, etc.) de acuerdo con un criterio de comparaci\xf3n (por ejemplo, de menor a mayor). Los algoritmos de ordenamiento se eval\xfaan seg\xfan varias propiedades fundamentales:","source":"@site/docs/05_sorting_algorithms/01_sorting_fundamentals.md","sourceDirName":"05_sorting_algorithms","slug":"/sorting_algorithms/sorting_fundamentals","permalink":"/Data_Structures/en/docs/sorting_algorithms/sorting_fundamentals","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/05_sorting_algorithms/01_sorting_fundamentals.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar-position":1},"sidebar":"tutorialSidebar","previous":{"title":"Algoritmos de Ordenamiento","permalink":"/Data_Structures/en/docs/category/algoritmos-de-ordenamiento"},"next":{"title":"Bubble Sort","permalink":"/Data_Structures/en/docs/sorting_algorithms/bubble_sort"}}');var i=n(4848),r=n(8453);const o={"sidebar-position":1},t="Fundamentos del ordenamiento: estabilidad, adaptabilidad y comparaciones",l={},d=[{value:"Estabilidad",id:"estabilidad",level:2},{value:"Adaptabilidad",id:"adaptabilidad",level:2},{value:"Comparaciones",id:"comparaciones",level:2},{value:"Relaci\xf3n de propiedades",id:"relaci\xf3n-de-propiedades",level:2},{value:"Aplicaciones pr\xe1cticas",id:"aplicaciones-pr\xe1cticas",level:2},{value:"Buenas pr\xe1cticas",id:"buenas-pr\xe1cticas",level:2},{value:"Referencias",id:"referencias",level:2}];function c(e){const s={admonition:"admonition",annotation:"annotation",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mermaid:"mermaid",mi:"mi",mo:"mo",mrow:"mrow",ol:"ol",p:"p",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"fundamentos-del-ordenamiento-estabilidad-adaptabilidad-y-comparaciones",children:"Fundamentos del ordenamiento: estabilidad, adaptabilidad y comparaciones"})}),"\n",(0,i.jsxs)(s.p,{children:["El ",(0,i.jsx)(s.strong,{children:"ordenamiento (sorting)"})," es el proceso de organizar los elementos de una colecci\xf3n (arreglo, lista, etc.) de acuerdo con un criterio de comparaci\xf3n (por ejemplo, de menor a mayor). Los algoritmos de ordenamiento se eval\xfaan seg\xfan varias propiedades fundamentales:"]}),"\n",(0,i.jsx)(s.h2,{id:"estabilidad",children:"Estabilidad"}),"\n",(0,i.jsxs)(s.p,{children:["Un algoritmo de ordenamiento es ",(0,i.jsx)(s.strong,{children:"estable si mantiene el orden relativo de los elementos con claves iguales"}),". Por ejemplo, si tenemos dos estudiantes con la misma calificaci\xf3n, un algoritmo estable preservar\xe1 su orden original."]}),"\n",(0,i.jsxs)(s.p,{children:["Algunos ejemplos de ",(0,i.jsx)(s.strong,{children:"algoritmos estables"})," son: Insertion Sort, Merge Sort, Bubble Sort."]}),"\n",(0,i.jsxs)(s.p,{children:["En contraparte, algunos ejemplos de ",(0,i.jsx)(s.strong,{children:"algoritmos inestables"})," son: Quick Sort (implementaciones b\xe1sicas), Heap Sort, Selection Sort."]}),"\n",(0,i.jsxs)(s.admonition,{type:"info",children:[(0,i.jsx)(s.p,{children:"Importancia:"}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Fundamental cuando se aplican m\xfaltiples criterios de ordenamiento."}),"\n",(0,i.jsx)(s.li,{children:"En sistemas donde la estabilidad de datos es cr\xedtica (ej. reportes jer\xe1rquicos)."}),"\n"]})]}),"\n",(0,i.jsx)(s.h2,{id:"adaptabilidad",children:"Adaptabilidad"}),"\n",(0,i.jsxs)(s.p,{children:["Un algoritmo es ",(0,i.jsx)(s.strong,{children:"adaptativo si mejora su desempe\xf1o cuando la entrada est\xe1 parcial o totalmente ordenada"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Un ejemplo de un ",(0,i.jsx)(s.strong,{children:"algoritmo adaptativo"})," es Insertion Sort, ya que si la lista est\xe1 casi ordenada, su complejidad puede acercarse a ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"O"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mclose",children:")"})]})})]}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Por otra parte, Merge Sort ",(0,i.jsx)(s.strong,{children:"no es adaptativo"}),", ya que siempre ejecuta la misma cantidad de pasos, sin importar el estado de los datos."]}),"\n",(0,i.jsxs)(s.admonition,{type:"info",children:[(0,i.jsx)(s.p,{children:"Importancia:"}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Muy \xfatil cuando se espera que los datos lleguen casi ordenados."}),"\n"]})]}),"\n",(0,i.jsx)(s.h2,{id:"comparaciones",children:"Comparaciones"}),"\n",(0,i.jsx)(s.p,{children:"La mayor\xeda de los algoritmos de ordenamiento se clasifican en dos tipos:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Basados en comparaciones:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Comparan los elementos para decidir su orden."}),"\n",(0,i.jsxs)(s.li,{children:["Complejidad te\xf3rica m\xednima en el peor caso: ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"O"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mi,{children:"l"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsx)(s.mi,{children:"g"}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(n log n)"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"o"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mclose",children:")"})]})})]})," (teorema de la decisi\xf3n)."]}),"\n",(0,i.jsx)(s.li,{children:"Ejemplos: Quick Sort, Merge Sort, Heap Sort, Insertion Sort."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"No basados en comparaciones:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"No dependen de comparaciones directas, usan propiedades de los datos (por ejemplo, su rango o d\xedgitos)."}),"\n",(0,i.jsx)(s.li,{children:"Ejemplos: Counting Sort, Radix Sort, Bucket Sort."}),"\n",(0,i.jsxs)(s.li,{children:["Pueden alcanzar complejidades lineales ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"O"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mclose",children:")"})]})})]})," bajo ciertas condiciones."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"relaci\xf3n-de-propiedades",children:"Relaci\xf3n de propiedades"}),"\n",(0,i.jsx)(s.mermaid,{value:"flowchart LR\n    A[Algoritmos de Ordenamiento] --\x3e B[Basados en Comparaci\xf3n]\n    A --\x3e C[No Basados en Comparaci\xf3n]\n\n    %% Basados en Comparaci\xf3n\n    B --\x3e D[Estables]\n    B --\x3e E[No Estables]\n    B --\x3e F[Adaptativos]\n    B --\x3e G[No Adaptativos]\n\n    %% Ejemplos Estables\n    D --\x3e D1[Bubble Sort]\n    D --\x3e D2[Merge Sort]\n    D --\x3e D3[Insertion Sort]\n\n    %% Ejemplos No Estables\n    E --\x3e E1[Quick Sort]\n    E --\x3e E2[Heap Sort]\n    E --\x3e E3[Selection Sort]\n\n    %% Ejemplos Adaptativos\n    F --\x3e F1[Insertion Sort]\n    F --\x3e F2[Bubble Sort]\n\n    %% Ejemplos No Adaptativos\n    G --\x3e G1[Merge Sort]\n    G --\x3e G2[Heap Sort]\n    G --\x3e G3[Quick Sort]\n\n    %% No Basados en Comparaci\xf3n\n    C --\x3e H[Counting Sort]\n    C --\x3e I[Radix Sort]\n    C --\x3e J[Bucket Sort]"}),"\n",(0,i.jsx)(s.h2,{id:"aplicaciones-pr\xe1cticas",children:"Aplicaciones pr\xe1cticas"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Estabilidad:"})," Ordenar registros por m\xfaltiples campos (ej. por nombre y luego por fecha)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Adaptabilidad:"})," Procesar datos de sensores que ya est\xe1n parcialmente ordenados."]}),"\n",(0,i.jsx)(s.li,{children:"Comparaciones: Selecci\xf3n de algoritmos en bases de datos seg\xfan el tama\xf1o y tipo de datos."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"buenas-pr\xe1cticas",children:"Buenas pr\xe1cticas"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"SRP:"})," Cada funci\xf3n de ordenamiento debe hacer solo una cosa: ordenar."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Nombres claros:"})," Usar nombres como insertionSort en lugar de abreviaturas."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Extensibilidad:"})," Se pueden agregar variantes (estable, inestable) sin modificar el c\xf3digo base."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pruebas unitarias:"})," Validar listas vac\xedas, con un solo elemento, ordenadas e inversas."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"referencias",children:"Referencias"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Cormen, T. H., Leiserson, C. E., Rivest, R. L., & Stein, C. (2022). Introduction to Algorithms (4th ed.). MIT Press."}),"\n",(0,i.jsx)(s.li,{children:"Weiss, M. A. (2020). Data Structures and Algorithm Analysis in Java (4th ed.). Pearson."}),"\n",(0,i.jsx)(s.li,{children:"Sedgewick, R., & Wayne, K. (2011). Algorithms (4th ed.). Addison-Wesley."}),"\n"]})]})}function m(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>t});var a=n(6540);const i={},r=a.createContext(i);function o(e){const s=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);